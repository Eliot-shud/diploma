version: '3.8'

services:
  db:
    image: postgres:15.0-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - diploma_data:/var/lib/postgresql/data/
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 5s
      timeout: 5s
      retries: 10

  migrations:
    image: elerbek1kamoloff/todolist_diploma:latest
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py migrate

  api:
    image: elerbek1kamoloff/todolist_diploma:latest
    restart: always
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  frontend:
    image: sermalenk/skypro-front:lesson-35
    restart: always
    depends_on:
      api:
        condition: service_started
    ports:
      - "80:80"

volumes:
  diploma_data:
