name: Build and deploy action
on:
  push:
    branches: ["main"]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v3
      - name: docker build
        run: docker build -t elerbek1kamoloff/skypro1:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: docker push
        run: docker push elerbek1kamoloff/skypro1:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      POSTGRES_USER: ${{ secrets.DB_USER }}
      POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
    steps:
      - name: clone code
        uses: actions/checkout@v3

      - name: render configs
        run: |
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
          cat ./deploy_nginx/nginx.conf | envsubst > deploy/nginx.conf

      - name: clone files to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: "deploy_ci/docker-compose.yaml, deploy_nginx/nginx.cong, deploy_ci/.env"
          target: "todolist"
          strip_components: 1

      - name: deploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd todolist
            docker-compose down
            docker-compose up -d