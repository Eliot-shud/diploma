name: Build and deploy action
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/skypro1:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    env:
      POSTGRES_USER: ${{ secrets.DB_USER }}
      POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    steps:
      - name: clone code
        uses: actions/checkout@v3.5.2

      - name: render configs
        run: |-
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy_ci/docker-compose.yaml
          cat .env | envsubst > docker_ci/.env

      - name: copy files to server
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.HOST }}
            port: ${{ secrets.PORT }}
            username: ${{ secrets.USERNAME }}
            password: ${{ secrets.PASSWORD }}
            source: "deploy_ci/docker-compose.yaml, deploy_ci/.env"
            target: "todolist"
            strip_components: 1

      - name: deploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd todolist
            docker-compose down
            docker-compose up -d